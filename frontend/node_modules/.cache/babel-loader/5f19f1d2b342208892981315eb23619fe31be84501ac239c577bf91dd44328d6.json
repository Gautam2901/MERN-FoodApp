{"ast":null,"code":"// import { createContext, useEffect, useState } from \"react\";\n// import { food_list } from \"../assets/assets\";\n\n// export const StoreContext = createContext(null);\n\n// const StoreContextProvider = (props) => {\n\n//     const [cartItems, setCartItems] = useState({});\n\n//     const addToCart = (itemId) => {\n//         if(!cartItems[itemId]){\n//             setCartItems((prev)=>({...prev,[itemId]:1}))\n//         }\n//         else{\n//             setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}))\n//         }\n//     }\n\n//     const removeFromCart = (itemId) => {\n//         setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\n//     }\n\n//    const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for(const item in cartItems)\n//     {\n//         if(cartItems[item]>0){\n//             let itemInfo = food_list.find((product)=>product._id === item);\n//             totalAmount += itemInfo.price * cartItems[item];\n//         }\n//     }\n//     return totalAmount;\n//    }\n\n//     const contextValue = {\n//         food_list,\n//         cartItems,\n//         setCartItems,\n//         addToCart,\n//         removeFromCart,\n//         getTotalCartAmount\n//     }\n\n//     return(\n//         <StoreContext.Provider value={contextValue}>\n//             {props.children}\n//         </StoreContext.Provider>\n//     )\n// }\n\n// export default StoreContextProvider;","map":{"version":3,"names":[],"sources":["C:/Users/Asus/OneDrive/Desktop/PRABHAT_Coding/MERN/Projects_2024/ReactJs/foodApp/src/context/StoreContext.js"],"sourcesContent":["// import { createContext, useEffect, useState } from \"react\";\r\n// import { food_list } from \"../assets/assets\";\r\n\r\n// export const StoreContext = createContext(null);\r\n\r\n// const StoreContextProvider = (props) => {\r\n\r\n\r\n//     const [cartItems, setCartItems] = useState({});\r\n    \r\n//     const addToCart = (itemId) => {\r\n//         if(!cartItems[itemId]){\r\n//             setCartItems((prev)=>({...prev,[itemId]:1}))\r\n//         }\r\n//         else{\r\n//             setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}))\r\n//         }\r\n//     }\r\n\r\n//     const removeFromCart = (itemId) => {\r\n//         setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n//     }\r\n\r\n\r\n//    const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for(const item in cartItems)\r\n//     {\r\n//         if(cartItems[item]>0){\r\n//             let itemInfo = food_list.find((product)=>product._id === item);\r\n//             totalAmount += itemInfo.price * cartItems[item];\r\n//         }\r\n//     }\r\n//     return totalAmount;\r\n//    }\r\n\r\n//     const contextValue = {\r\n//         food_list,\r\n//         cartItems,\r\n//         setCartItems,\r\n//         addToCart,\r\n//         removeFromCart,\r\n//         getTotalCartAmount\r\n//     }\r\n    \r\n//     return(\r\n//         <StoreContext.Provider value={contextValue}>\r\n//             {props.children}\r\n//         </StoreContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export default StoreContextProvider;"],"mappings":"AAAA;AACA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}