{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\PRABHAT_Coding\\\\MERN\\\\Projects_2024\\\\ReactJs\\\\foodApp\\\\src\\\\context\\\\StoreContext.js\",\n  _s = $RefreshSig$();\n// import { createContext, useEffect, useState } from \"react\";\n// import { food_list } from \"../assets/assets\";\n\n// export const StoreContext = createContext(null);\n\n// const StoreContextProvider = (props) => {\n\n//     const [cartItems, setCartItems] = useState({});\n\n//     const addToCart = (itemId) => {\n//         if(!cartItems[itemId]){\n//             setCartItems((prev)=>({...prev,[itemId]:1}))\n//         }\n//         else{\n//             setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}))\n//         }\n//     }\n\n//     const removeFromCart = (itemId) => {\n//         setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\n//     }\n\n//    const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for(const item in cartItems)\n//     {\n//         if(cartItems[item]>0){\n//             let itemInfo = food_list.find((product)=>product._id === item);\n//             totalAmount += itemInfo.price * cartItems[item];\n//         }\n//     }\n//     return totalAmount;\n//    }\n\n//     const contextValue = {\n//         food_list,\n//         cartItems,\n//         setCartItems,\n//         addToCart,\n//         removeFromCart,\n//         getTotalCartAmount\n//     }\n\n//     return(\n//         <StoreContext.Provider value={contextValue}>\n//             {props.children}\n//         </StoreContext.Provider>\n//     )\n// }\n\n// export default StoreContextProvider;\n\nimport axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext(null);\nconst StoreContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const url = \"http://localhost:4000\";\n  const [token, setToken] = useState(\"\");\n  const [food_list, setFood_list] = useState([]);\n\n  // Add item to cart\n  const addToCart = async itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (token) {\n      await axios.post(url + \"/api/cart/add\", {\n        itemId\n      }, {\n        headers: {\n          token\n        }\n      });\n    }\n  };\n\n  // Remove item from cart\n  const removeFromCart = async itemId => {\n    setCartItems(prev => {\n      const newItems = {\n        ...prev\n      };\n      if (newItems[itemId] > 1) {\n        newItems[itemId] -= 1;\n      } else {\n        delete newItems[itemId]; // Remove item if quantity is 0\n      }\n      if (token) {\n        awaita;\n      }\n      return newItems;\n    });\n  };\n\n  // Calculate total cart amount\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const itemId in cartItems) {\n      if (cartItems[itemId] > 0) {\n        const itemInfo = food_list.find(product => product._id === itemId);\n        if (itemInfo) {\n          totalAmount += itemInfo.price * cartItems[itemId];\n        }\n      }\n    }\n    return totalAmount;\n  };\n  const fetchFoodList = async () => {\n    const response = await axios.get(url + \"/api/food/list\");\n    setFood_list(response.data.data);\n  };\n  useEffect(() => {\n    async function loadData() {\n      await fetchFoodList();\n      if (localStorage.getItem(\"token\")) {\n        setToken(localStorage.getItem(\"token\"));\n      }\n    }\n    loadData();\n  }, []);\n  const contextValue = {\n    food_list,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount,\n    url,\n    token,\n    setToken\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreContextProvider, \"zgBwUO+UiJHZ/pvIz4CrS+j1qGY=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useState","jsxDEV","_jsxDEV","StoreContext","StoreContextProvider","props","_s","cartItems","setCartItems","url","token","setToken","food_list","setFood_list","addToCart","itemId","prev","post","headers","removeFromCart","newItems","awaita","getTotalCartAmount","totalAmount","itemInfo","find","product","_id","price","fetchFoodList","response","get","data","loadData","localStorage","getItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/PRABHAT_Coding/MERN/Projects_2024/ReactJs/foodApp/src/context/StoreContext.js"],"sourcesContent":["// import { createContext, useEffect, useState } from \"react\";\r\n// import { food_list } from \"../assets/assets\";\r\n\r\n// export const StoreContext = createContext(null);\r\n\r\n// const StoreContextProvider = (props) => {\r\n\r\n\r\n//     const [cartItems, setCartItems] = useState({});\r\n    \r\n//     const addToCart = (itemId) => {\r\n//         if(!cartItems[itemId]){\r\n//             setCartItems((prev)=>({...prev,[itemId]:1}))\r\n//         }\r\n//         else{\r\n//             setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+1}))\r\n//         }\r\n//     }\r\n\r\n//     const removeFromCart = (itemId) => {\r\n//         setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n//     }\r\n\r\n\r\n//    const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for(const item in cartItems)\r\n//     {\r\n//         if(cartItems[item]>0){\r\n//             let itemInfo = food_list.find((product)=>product._id === item);\r\n//             totalAmount += itemInfo.price * cartItems[item];\r\n//         }\r\n//     }\r\n//     return totalAmount;\r\n//    }\r\n\r\n//     const contextValue = {\r\n//         food_list,\r\n//         cartItems,\r\n//         setCartItems,\r\n//         addToCart,\r\n//         removeFromCart,\r\n//         getTotalCartAmount\r\n//     }\r\n    \r\n//     return(\r\n//         <StoreContext.Provider value={contextValue}>\r\n//             {props.children}\r\n//         </StoreContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export default StoreContextProvider;\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const StoreContext = createContext(null);\r\n\r\nconst StoreContextProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState({});\r\n  const url = \"http://localhost:4000\";\r\n  const [token, setToken] = useState(\"\");\r\n  const [food_list, setFood_list] = useState([]);\r\n\r\n\r\n  // Add item to cart\r\n  const addToCart = async (itemId) => {\r\n    setCartItems((prev) => ({...prev, [itemId]: (prev[itemId] || 0) + 1 }));\r\n\r\n    if(token){\r\n      await axios.post(url+\"/api/cart/add\", {itemId}, {headers:{token}})\r\n    }\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = async (itemId) => {\r\n    setCartItems((prev) => {\r\n      const newItems = { ...prev };\r\n      if (newItems[itemId] > 1) {\r\n        newItems[itemId] -= 1;\r\n      } else {\r\n        delete newItems[itemId]; // Remove item if quantity is 0\r\n      }\r\n\r\n      if(token){\r\n        awaita\r\n      }\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  // Calculate total cart amount\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const itemId in cartItems) {\r\n      if (cartItems[itemId] > 0) {\r\n        const itemInfo = food_list.find((product) => product._id === itemId);\r\n        if (itemInfo) {\r\n          totalAmount += itemInfo.price * cartItems[itemId];\r\n        }\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n\r\n\r\n  const fetchFoodList = async()=>{\r\n    const response = await axios.get(url+\"/api/food/list\");\r\n    setFood_list(response.data.data);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    async function loadData() {\r\n      await fetchFoodList();\r\n      if(localStorage.getItem(\"token\")){\r\n        setToken(localStorage.getItem(\"token\"));\r\n      }\r\n    }\r\n    loadData();\r\n  },[])\r\n\r\n  const contextValue = {\r\n    food_list,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    getTotalCartAmount,\r\n    url,\r\n    token,\r\n    setToken\r\n  };\r\n\r\n  return (\r\n    <StoreContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StoreContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}